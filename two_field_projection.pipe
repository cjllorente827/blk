
# blk only cares about where you want to save files to
# and what kind of parallelism you want to use
# everything else is specific to the pipeline
[blk]
cache_dir = ${data args:enzo_dataset_dir}/cache
parallel = task
dryrun_mode = off
debug_mode = off
# name of the file where operation definitions are kept
# or 'blk' to use blk premade operations
operations_module = blk

# These are where the user should assign arguments
# the section titles can be anything the user wants
[data args]
enzo_dataset_dir = /mnt/gs21/scratch/llorente/halo_4954_lowres/fiducial_run
box_center = [0.5, 0.5, 0.5]
# 0.4 is 10 Mpccm/h
box_length = 0.24 

projection_axis = x
rotation_axis = z 
axes_units = Mpccm/h

; cmap = plasma
; field = ("gas", "temperature")
; field_name = "Temperature\n(K)"
; zlims = [1e3, 1e8]
; field_units = K

; cmap = dusk
; field = ("gas", "metallicity")
; field_name = "Metallicity\n(K)"
; zlims = [1e-4, 1e0]
; field_units = Zsun

# These sections have to be labeled "segment N" where N is the number of the 
# pipeline segment
[segment 1]

# name of the function this segment will execute
operation = projection
# how many tasks will be created in this segment of the pipeline
num_tasks = 266

# this is the argument that gets formatted individually for all tasks, meaning that 
# each task gets this variable set like so:
#
# for i in range(width):
#     task.enzo_dataset = enzo_dataset.format(i)
# 
format = enzo_dataset
enzo_dataset = ${data args:enzo_dataset_dir}/RD{0:04d}/RD{0:04d}

# the rest of these will be passed in as keyword arguments
field = ("gas", "density")
field_units = g/cm**3

box_center = ${data args:box_center}
box_length = ${data args:box_length}

projection_axis = ${data args:projection_axis}
#rotation_axis = ${user args:rotation_axis}

[segment 2]

# name of the function this segment will execute
operation = projection
# how many tasks will be created in this segment of the pipeline
num_tasks = 266

# this is the argument that gets formatted individually for all tasks, meaning that 
# each task gets this variable set like so:
#
# for i in range(width):
#     task.enzo_dataset = enzo_dataset.format(i)
# 
format = enzo_dataset
enzo_dataset = ${data args:enzo_dataset_dir}/RD{0:04d}/RD{0:04d}

# the rest of these will be passed in as keyword arguments
field = ("gas", "temperature")
field_units = K

box_center = ${data args:box_center}
box_length = ${data args:box_length}

projection_axis = ${data args:projection_axis}
#rotation_axis = ${user args:rotation_axis}

[segment 3]

operation = twoPanelProjectionPlot

# determines how dependencies get assigned
# this strategy assigns segment 2 task 5 as dependent on segment 1 task 5
dependency_strategy = many-to-one
# the width of the segment, i.e. how many tasks get created
# this value will be overidden due to the dependency strategy
num_tasks = 0
always_run = yes

enzo_dataset = ${data args:enzo_dataset_dir}/RD{0:04d}/RD{0:04d}

save_action = manual
format = output_file, enzo_dataset
output_file = ${data args:enzo_dataset_dir}/temp/RD{0:04d}.png

# the rest of these will be passed in as keyword arguments
field_names = ["Density\n(g cm$$^{-3}$$)", "Temperature\n(K)"]
axes_units = ${data args:axes_units}

box_length = ${data args:box_length}

cmaps = ["viridis", "plasma"]
zlims = [[1e-31, 9e-25],[1e3, 1e8]]

